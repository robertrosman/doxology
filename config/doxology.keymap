/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors/mouse_keys.dtsi>
#include "keymap_swedish.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

/ {
    // combos {
    //     compatible = "zmk,combos";
    //     flash_firmware {
    //         bindings = <&bootloader>;
    //         key-positions = <43 38 39 40 41 42 43 44 45 46 47>;
    //     };
    // };
    /* START input behaviour for trackball */

    tb0_mmv_ibl {
        /* new forked compatible name */

        compatible = "zmk,input-behavior-listener";

        /* the input point device alias */

        device = <&trackball>;

        /* only enable in mouse key layer */

        layers = <4>;

        /* event code value to override raw input event */
        /* designed for switching to mouse scroll, xy-swap, precise-mode+, etc */
        /* NOTE: only apply input-code overriding for INPUT_EV_REL */

        evt-type = <INPUT_EV_REL>;
        x-input-code = <INPUT_REL_X>;
        y-input-code = <INPUT_REL_Y>;
        scale-multiplier = <1>;
        scale-divisor = <1>;

        /* bind a behavior to auto activate MSK layer for &mkp */
        /* bindings = <&ib_tog_layer 4>; */
        /* align to CCW 45 degree */
        /* rotate-deg = <315>; */
        /* NOTE 1: This settings do not compitable with y-invert and x-invert */
        /* NOTE 2: Floating point computation requires alot of ram. */
        /*         This feature will cuase stackove flow with CONFIG_ZMK_USB_LOGGING=y */
    };

    /* input config for mouse scroll mode on momentary mouse scroll layer */

    tb0_msl_ibl {
        compatible = "zmk,input-behavior-listener";
        device = <&trackball>;
        layers = <5>;
        evt-type = <INPUT_EV_REL>;

        /* slienting x-axis with alt event code */

        x-input-code = <INPUT_REL_MISC>;
        y-input-code = <INPUT_REL_WHEEL>;

        /* invert scrolling direction */

        y-invert;

        /* align to CCW 45 degree */
        /* rotate-deg = <315>; */
        /* NOTE 1: This settings do not compitable with y-invert and x-invert */
        /* NOTE 2: Floating point computation requires alot of ram. */
        /*         This feature will cuase stackove flow with CONFIG_ZMK_USB_LOGGING=y */
        /* bind a behavior to down scaling input value to (1/8) */
        /* NOTE: This behavior is different to scale-divisor. */
        /*       The delta value is accumlated until result >= 1 after cast. */
        /*       The scrolling is preented in hi-res and allow precise scrolling */

        bindings = <&ib_wheel_scaler 1 8>;
    };

    /* adjust cooldown waiting period for mouse key layer (MSK) after activated */

    ib_tog_layer: ib_tog_layer {
        compatible = "zmk,input-behavior-tog-layer";
        #binding-cells = <1>;
        time-to-live-ms = <1000>;
    };

    /* define a resolution down scaler only for INPUT_REL_WHEEL */

    ib_wheel_scaler: ib_wheel_scaler {
        compatible = "zmk,input-behavior-scaler";
        #binding-cells = <2>;
        evt-type = <INPUT_EV_REL>;
        input-code = <INPUT_REL_WHEEL>;
    };

    /* END input behaviour for trackball */

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&none  &none  &none  &none  &none  &none                    &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none                    &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none                    &none  &none  &none  &none  &none  &none
                &none  &none
                                &none  &none  &none    &none  &none  &none
                                &none  &none                    &none  &none
            >;
        };

        numbers {
            bindings = <
&none  &none  &none  &none  &none  &none                    &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none                    &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none                    &none  &none  &none  &none  &none  &none
                &none  &none
                                &none  &none  &none    &none  &none  &none
                                &none  &none                    &none  &none
            >;
        };

        navigation {
            bindings = <
&none  &none  &none  &none  &none  &none                    &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none                    &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none                    &none  &none  &none  &none  &none  &none
                &none  &none
                                &none  &none  &none    &none  &none  &none
                                &none  &none                    &none  &none
            >;
        };

        symbols {
            bindings = <
&none  &none  &none  &none  &none  &none                    &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none                    &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none                    &none  &none  &none  &none  &none  &none
                &none  &none
                                &none  &none  &none    &none  &none  &none
                                &none  &none                    &none  &none
            >;
        };

        pointer {
            bindings = <
&none  &none  &none  &none  &none  &none                    &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none                    &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none                    &none  &none  &none  &none  &none  &none
                &none  &none
                                &none  &none  &none    &none  &none  &none
                                &none  &none                    &none  &none
            >;
        };

        pointer_scroll {
            bindings = <
&none  &none  &none  &none  &none  &none                    &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none                    &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none                    &none  &none  &none  &none  &none  &none
                &none  &none
                                &none  &none  &none    &none  &none  &none
                                &none  &none                    &none  &none
            >;
        };
    };
};
