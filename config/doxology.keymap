/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    // TODO: use a custom behavior for connect layer. hold button to activate connect layer, tap to send keypress. use like `&mo_tap CONNECT END`
    //Â See the last example here: https://zmk.dev/docs/behaviors/hold-tap#example-use-cases
    // behaviors {
    // mo_tap: behavior_mo_tap {
    // compatible = "zmk,behavior-hold-tap";
    // #binding-cells = <2>;
    // flavor = "hold-preferred";
    // tapping-term-ms = <200>;
    // bindings = <&mo>, <&kp>;
    // };
    // };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp TAB        &kp Q    &kp W             &lt 5 E       &kp R      &kp T                                                   &kp Y          &kp U                 &kp I      &kp O       &kp P      &kp
&kp BACKSPACE  &lt 4 A  &kp S             &kp D         &kp F      &kp G                                                   &kp H          &kp J                 &kp K      &kp L       &kp        &kp
&kp LCTRL      &kp Z    &kp X             &kp C         &kp V      &kp B                                                   &kp N          &kp M                 &kp COMMA  &kp PERIOD  &kp MINUS  &kp
                        &kp LEFT_COMMAND  &kp LEFT_ALT
                                                        &lt 1 ESC  &sk LEFT_SHIFT  &mt LCTRL RG(ENTER)    &lt 2 BACKSPACE  &kp SPACE      &sl 3
                                                        &mo 4      &kp LCMD                                                &kp RIGHT_ALT  &kp LS(LA(LC(LCMD)))
            >;
        };

        numbers {
            bindings = <
&kp LA(TAB)      &kp F1  &kp F2   &kp F3   &kp F4   &trans                             &kp COMMA        &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &trans  &trans
&kp LA(LS(TAB))  &kp F5  &kp F6   &kp F7   &kp F8   &kp PAUSE_BREAK                    &kp DOT          &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &trans  &trans
&trans           &kp F9  &kp F10  &kp F11  &kp F12  &kp SYSREQ                         &kp KP_NUMBER_0  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &trans  &trans
                         &trans   &trans
                                           &trans   &trans           &trans    &trans  &trans           &kp KP_NUMBER_0
                                           &trans   &trans                             &trans           &trans
            >;
        };

        navigation {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &kp C_AC_SCROLL_UP    &kp HOME  &kp UP    &kp END    &kp PAGE_UP    &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &kp C_AC_SCROLL_DOWN  &kp LEFT  &kp DOWN  &kp RIGHT  &kp PAGE_DOWN  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans                &trans    &trans    &trans     &trans         &trans
                &trans  &trans
                                &trans  &trans  &trans    &trans  &trans                &trans
                                &trans  &trans                    &trans                &trans
            >;
        };

        symbols {
            bindings = <
&kp LT        &kp EXCLAMATION   &kp DOUBLE_QUOTES  &kp HASH         &kp QUESTION   &kp PERCENT                    &trans                &kp PIPE   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS     &kp EQUAL        &kp QUESTION
&trans        &kp SINGLE_QUOTE  &kp AT             &kp CARET        &kp DOLLAR     &kp CARET                      &kp AMPS              &kp LBRC   &kp LBKT              &kp RIGHT_BRACKET         &kp RIGHT_BRACE  &kp NON_US_BACKSLASH
&kp LA(PIPE)  &kp PLUS          &kp MINUS          &kp KP_MULTIPLY  &kp KP_DIVIDE  &kp TILDE                      &kp NON_US_BACKSLASH  &kp GRAVE  &kp NON_US_BACKSLASH  &kp LS(NON_US_BACKSLASH)  &kp LA(EQUAL)    &kp LA(EQUAL)
                                &trans             &trans
                                                                    &trans         &trans       &trans    &trans  &trans                &trans
                                                                    &trans         &trans                         &trans                &trans
            >;
        };
    };
};
